---
# Configures a Debian based distro to be a media server
- name: Media Server Setup
  hosts: pve
  become: true
  gather_facts: false
  vars_files: vars.yml

  tasks:

    - name: Apt update
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600  # Update cache if older than one hour

    - name: Apt upgrade
      ansible.builtin.apt:
        upgrade: full
        autoremove: true
        autoclean: true

    - name: Install podman and its requirements
      ansible.builtin.apt:
        pkg:
          - podman-compose
          - slirp4netns

    - name: Create a non-login user for running containers
      ansible.builtin.user:
        name: "{{ podman_user }}"
        uid: "{{ podman_id }}"

    - name: Append line to .bashrc  # requirement for rootless podman
      ansible.builtin.lineinfile:
        path: /home/{{ podman_user }}/.bashrc
        line: 'export XDG_RUNTIME_DIR=/run/user/{{ podman_id }}'
        state: present
        insertbefore: EOF  # Add the line at the end of the file

    - name: Modify /etc/subuid  # set user namespaces for container user
      ansible.builtin.lineinfile:
        path: /etc/subuid
        search_string: "{{ podman_user }}"
        state: present
        line: "{{ podman_user }}:200000:100"

    - name: Modify /etc/subgid  # set user namespaces for container user
      ansible.builtin.lineinfile:
        path: /etc/subgid
        search_string: "{{ podman_user }}"
        state: present
        line: "{{ podman_user }}:200000:100"

    # - name: Enable login linger  # allow processes to continue without user session
    #   ansible.builtin.command: loginctl enable-linger {{ podman_user }}; loginctl show-user {{ podman_user }} --property=Linger
    #   register: result
    #   changed_when: '"yes" in result.stdout'

    # - name: Re-create a redis container with systemd service file generated in /tmp/
    #   containers.podman.podman_container:
    #     name: myredis
    #     image: redis
    #     state: present
    #     recreate: true
    #     expose:
    #       - 6379
    #     volumes_from:
    #       - mydata
    #     generate_systemd:
    #     path: /home/{{ podman_user }}/.config/systemd/user/
    #     restart_policy: always
    #     stop_timeout: 120
    #     names: true
    #     container_prefix: sonarr

    #TODO create users and groups for containers